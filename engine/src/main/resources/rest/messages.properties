#	\u00e0	\u00e0
#	\u00e8	\u00e8
#	\u00f2	\u00f2
#	\u00c8   \u00c8
#	\u00f9   \u00f9

#GENERAL
UNAUTHORIZED={0} is not allowed to {1} [{2}]
NOT_FOUND= NOT FOUND {0}  {1}

#GROUP
group.code.notBlank=Code is required
group.name.notBlank=Name is required

group.exists =The group {0} already exists
group.code.mismatch=the group code specified the URI ''{0}'' does not match with the one provided in the payload ''{1}''
group.cannot.delete.reserved=The group {0} can not be deleted
group.cannot.delete.references=The group {0} can not be deleted due to references

#page_settings
NotEmpty.pagesettings.params=List of params is required

#PAGE
page.code.NotBlank=Code is required
page.exists=The page {0} already exists
page.code.mismatch=the page code specified in the URI ''{0}'' does not match with the one provided in the payload ''{1}''
page.delete.online=Online pages can not be deleted
page.delete.children=Pages with children pages can not be deleted

#GuiFragments
guifragment.code.notBlank=Code is required
guifragment.gui.notBlank=Gui is required

guifragment.exists=The fragment {0} already exists
guifragment.code.mismatch=the fragment code specified the URI ''{0}'' does not match with the one provided in the payload ''{1}''
guifragment.cannot.delete.references=The fragment {0} can not be deleted due to references


#pagemodel
pageModel.code.notBlank=code is required
pageModel.descr.notBlank=description is required
pageModel.configuration.notBlank=configuration is required
pageModel.configuration.frames.required=At least one frame is required
pageModelFrame.descr.notBlank=description is required
pageModel.code.exists=The page model ''{0}'' already exists
pageModel.frames.pos.mismatch=frame position should be zero based and progressive
pageModel.code.mismatch=the code specified the URI ''{0}'' does not match with the one provided in the payload ''{1}''
pageModel.cannot.delete.references=The page model ''{0}'' can not be deleted due to references
