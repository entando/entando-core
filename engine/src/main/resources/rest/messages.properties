#	\u00e0	\u00e0
#	\u00e8	\u00e8
#	\u00f2	\u00f2
#	\u00c8   \u00c8
#	\u00f9   \u00f9

#GENERAL
UNAUTHORIZED={0} is not allowed to {1} [{2}]
NOT_FOUND= a {0} with {1} code could not be found
string.notValid=Submitted strings are not valid

pagination.page.invalid=page must be equal or greater than 1
pagination.item.empty=no items found on page ''{0}''
pagination.page.size.invalid=pageSize has to be equal or greater than 1 or 0 for no pagination

#
string.size.invalid=the size of field ''{0}'' must be between {2} and {1}


#GROUP
group.code.notBlank=Code is required
group.name.notBlank=Name is required

group.exists =The group ''{0}'' already exists
group.code.mismatch=the group code specified the URI ''{0}'' does not match with the one provided in the payload ''{1}''
group.cannot.delete.reserved=The group ''{0}'' can not be deleted
group.cannot.delete.references=The group ''{0}'' can not be deleted due to references with ''{1}''

#Role
role.code.notBlank=Code is required
role.name.notBlank=Name is required
role.exists =The role ''{0}'' already exists
role.code.mismatch=the role code specified the URI ''{0}'' does not match with the one provided in the payload ''{1}''
role.cannot.delete.references=The role ''{0}'' can not be deleted due to references
role.permission.notFound=The permission ''{0}'' does not exists

#permission
permission.code.notBlank=Code is required
permission.descr.notBlank=Descr is required


#page_settings
NotEmpty.pagesettings.params=List of params is required

#PAGE
page.code.NotBlank=Code is required
pageModel.code.NotBlank=PageModel is required
parent.code.NotBlank=Parent Code is required
group.code.NotBlank=Owner Group is required
page.exists=The page {0} already exists
page.code.mismatch=the page code specified in the URI ''{0}'' does not match with the one provided in the payload ''{1}''
page.delete.online=Online pages can not be deleted
page.delete.children=Pages with children pages can not be deleted
page.move.position.invalid=Invalid Request for page position change
page.move.group.mismatch=Can not move a page under a page owned by a different group
page.move.status.mismatch=Can not move a published page under an unpublished page
page.status.draftOnly=The page ''{0}'' as available only in draft mode
page.status.invalid=Page status should be ''draft'' or ''published''
page.status.invalid.online.ref=online page has references
page.status.invalid.draft.ref=draft page has references
page.status.invalid=the status of ''{0}'' page is draft

#GuiFragments
guifragment.code.notBlank=Code is required
guifragment.gui.notBlank=Gui code is required

guifragment.exists=The fragment ''{0}'' already exists
guifragment.doesNotExist=The fragment ''{0}'' does not exist
guifragment.code.mismatch=the fragment code specified the URI ''{0}'' does not match with the one provided in the payload ''{1}''
guifragment.cannot.delete.references=The fragment ''{0}'' cannot be deleted because it is referenced by fragments {1} and page models {2}
guifragment.cannot.delete.locked=The fragment ''{0}'' cannot be deleted because it is locked
guifragment.code.invalid=Code is mandatory, can only contain alphanumeric characters and underscores and its lenght cannot exceed 50


#pagemodel
pageModel.code.notBlank=code is required
pageModel.descr.notBlank=description is required
pageModel.configuration.notBlank=configuration is required
pageModel.configuration.frames.required=At least one frame is required
pageModelFrame.descr.notBlank=description is required
pageModel.code.exists=The page model ''{0}'' already exists
pageModel.frames.pos.mismatch=frame position should be zero based and progressive
pageModel.code.mismatch=the code specified the URI ''{0}'' does not match with the one provided in the payload ''{1}''
pageModel.cannot.delete.references=The page model ''{0}'' can not be deleted due to references

#Data Object Model
dataObjectModel.modelId.invalid=Model Id ''{0}'' is invalid because it has to be a long
dataObjectModel.doesNotExist=Model Id ''{0}'' does not exist
dataObjectModel.type.doesNotExist=no dataType with the code ''{0}'' could be found.
dataObjectModel.type.doesNotMachWithModel=dataType ''{0}'' does not match with the code ''{0}'' of extracted model.


dataObjectModel.modelId.notBlank=Model Id is required
dataObjectModel.descr.notBlank=Description is required
dataObjectModel.type.notBlank=Data Type is required
dataObjectModel.model.notBlank=Model is required

dataObjectModel.exists=The Data Object Model {0} already exists
dataObjectModel.modelId.mismatch=The Data Object Model code specified the URI ''{0}'' does not match with the one provided in the payload ''{1}''
dataObjectModel.cannot.delete.references=The Data Object Model {0} can not be deleted due to references

#Categories
category.code.notBlank=Category code is required
category.parent.notBlank=Parent Category code is required
category.titles.notBlank=Category Titles are required
category.code.mismatch=The Category code specified the URI ''{0}'' does not match with the one provided in the payload ''{1}''
category.notexists=The Category ''{0}'' does not exist
category.parent.notexists=The parent Category ''{0}'' does not exist
category.parent.cannotBeChanged=The parent Category cannot be changed
category.exists=The Category ''{0}'' already exists
category.cannot.delete.references=The Category ''{0}'' cannot be deleted because it is referenced

#Widget Type
widgettype.code.notBlank=Widget code is required
widgettype.titles.notBlank=Widget Titles are required
widgettype.group.notBlank=Widget Group is required
widgettype.customUi.notBlank=Widget UI is required
widgettype.exists=The Widget {0} already exists
widgettype.group.invalid=The Group ''{0}'' does not exist
widgettype.code.mismatch=the Widget code specified the URI ''{0}'' does not match with the one provided in the payload ''{1}''
widgettype.delete.locked=The Widget {0} cannot be deleted because it is locked
widgettype.delete.references.page=The Widget {0} cannot be deleted because it is used into pages

#Widget
widgetConfigurationRequest.code.notBlank=code is required

#Widget validators
content_viewer_list.defaultLangTitle.required=The title for the default language ''{0}'' is required.
content_viewer_list.pageLink.required=The selected page ''{0}'' in the link is not valid
content_viewer_list.defaultLangLink.required=Provide a link description for the default ''{0}'' language
content_viewer_list.parameters.invalid=Specify at least one parameter among categories, pagination, and maximum number of result

content_viewer_list.contentType.required=The content type is required
content_viewer_list.contentType.invalid=No content type found with code ''{0}''
content_viewer_list.contentmodel.invalid=Invalid content model ''{0}'' for type code ''{1}''

content_viewer.contentId.required=contentId is required
content_viewer.contentId.not_found=No content found with id ''{0}''
content_viewer.contentId.group.invalid=the page groups ''{0}'' have to be compatible with the content groups ''{1}''
content_viewer.contentmodel.invalid=Invalid content model ''{0}'' for type code ''{1}''

# Entity Type
entityType.code.notBlank=Type Code is required
entityType.name.notBlank=Type Name is required

entityTypes.list.notBlank=Type List is required

entityType.exists=The Type {0} already exists
entityType.notExists=The Type {0} doesn't exists
entityType.code.mismatch=The Type code specified the URI ''{0}'' does not match with the one provided in the payload ''{1}''
entityType.cannot.delete.references=The Type {0} can not be deleted due to references

entityType.typeCode.invalid=The Type code ''{0}'' is invalid because it must be a string of 3 uppercase letters.
entityType.typeDescription.invalid=The Type description is invalid

entityType.attribute.type.invalid=Type {0} - The attribute type ''{1}'' does not exist
entityType.attribute.text.invalidRange=Type {0} - The validation of attribute ''{1}'' has an invalid test range
entityType.attribute.date.invalidRangeStart=Type {0} - The validation of attribute ''{1}'' has an invalid start date of the range
entityType.attribute.date.invalidRangeEnd=Type {0} - The validation of attribute ''{1}'' has an invalid end date of the range
entityType.attribute.date.invalidValue=Type {0} - The validation of attribute ''{1}'' has an invalid date value
entityType.attribute.number.invalidRange=Type {0} - The validation of attribute ''{1}'' has an invalid range
entityType.attribute.ognl.missingErrorMessage=Type {0} - The Ognl validation of attribute ''{1}'' is misconfigured - missing error message
entityType.attribute.ognl.missingHelpMessage=Type {0} - The Ognl validation of attribute ''{1}'' is misconfigured - missing help message
entityType.attribute.enumerator.invalid=Type {0} - The enumerator attribute ''{1}'' is misconfigured
entityType.attribute.list.missingNestedAttribute=Type {0} - The List attribute ''{1}'' is misconfigured - missing nested attribute
entityType.attribute.composite.missingElements=Type {0} - The Composite attribute ''{1}'' is misconfigured - missing attribute elements

# Data Type
dataType.pageCode.invalid=Data Type {0} - The view page ''{1}'' does not exist or it is not online
dataType.modelId.invalid=Data Type {0} - The model id ''{1}'' is invalid
dataType.modelId.doesNotExist=Data Type {0} - The model id ''{1}'' does not exist
dataType.modelId.mismatch=Data Type {0} - The model id ''{1}'' associated with the data type ''{2}''

#lang
language.active.required=The status ''active'' is required
language.cannot.disable.default=default language cannot be disabled

# USER
user.authorities.group.blank=Group code is required
user.authorities.role.blank=Role code is required
user.authorities.invalid.req=the specified {} does not exist
user.authorities.self.update=Cannot update yourself
user.username.NotBlank=Username is required
user.password.NotBlank=Password is required
user.password.invalid=Password is not valid
user.password.old.invalid=Incorrect old password
user.old.password.NotBlank=Old password is required
user.new.password.NotBlank=New password is required
user.username.mismatch=the username specified in the URI ''{0}'' does not match with the one provided in the payload ''{1}''
user.passwords.same=New password has to be different from old password
user.status.invalid=User status should be ''active'' or ''inactive''

#labels
labelRequest.titles.required=No languages specified
labelRequest.key.mismatch=the key specified the URI ''{0}'' does not match with the one provided in the payload ''{1}''
labelGroup.langs.defaultLang.textRequired=The value for the default language ''{0}'' is required
labelGroup.langs.lang.invalid=The language ''{0}'' is not valid
labelGroup.langs.defaultLang.required=The default lang is required
labelGroup.code.already.present=The label ''{0}'' already exists

#userSettings
userSettings.ExtendedPrivacyModuleEnabled.required=''restrictionsActive'' is required
userSettings.GravatarIntegrationEnabled.required=''enableGravatorIntegration'' is required
userSettings.maxMonthsSinceLastPasswordChange.required=''maxMonthsPasswordValid'' is required
userSettings.MaxMonthsSinceLastAccess.required=''lastAccessPasswordExpirationMonths'' is required

userSettings.MaxMonthsSinceLastPasswordChange.invalid=''maxMonthsPasswordValid'' must be ''0'' or greater
userSettings.MaxMonthsSinceLastAccess.invalid=''lastAccessPasswordExpirationMonths'' must be ''0'' or greater

#Database

database.dump.table.notFound=No table dump found for backup ''{0}'', database ''{1}'', table ''{1}''

#ContentModel
contetntmodel.id.already.present=The content model ''{0}'' already exists
contentModel.id.wrongUtilizer=The model id ''{0}'' is being used as the default for the ''{1}'' content type
contetntmodel.page.references=The content model is referenced
contentmodel.code.mismatch=the key specified the URI ''{0}'' does not match with the one provided in the payload ''{1}''
contetntmodel.contentType.locked=Can not change the contentType. Expected ''{0}'' but was ''{1}''
contentModel.contentType.notFound=The contentType ''{0}'' does not exists


