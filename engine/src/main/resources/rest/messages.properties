#	\u00e0	\u00e0
#	\u00e8	\u00e8
#	\u00f2	\u00f2
#	\u00c8   \u00c8
#	\u00f9   \u00f9

#GENERAL
UNAUTHORIZED={0} is not allowed to {1} [{2}]
UNAUTHORIZED_ON_RESOURCE={0} is not allowed to access resource {1}
NOT_FOUND= a {0} with {1} code could not be found
string.notValid=Submitted strings are not valid

pagination.page.invalid=page must be equal or greater than 1
pagination.item.empty=no items found on page ''{0}''
pagination.page.size.invalid=pageSize has to be equal or greater than 1 or 0 for no pagination

sorting.sort.invalid=the sorting attribute ''{0}'' does not exist
sorting.direction.invalid=direction can only be either ASC or DESC

filtering.filter.attr.name.invalid=the filtering attribute ''{0}'' does not exist
filtering.filter.operation.invalid=invalid operator
filtering.filter.date.format.invalid=invalid date format ''{0}'' in ''{1}'' filter

jsonPatch.invalid=The provided JSON patch is not valid
jsonPatch.field.protected=The field ''{0}'' can not be updated via JSON patch

#
string.size.invalid=the size of field ''{0}'' must be between {2} and {1}
string.notAlphanumeric=''{0}'' contains invalid characters. Only alphanumeric characters and the underscore ''_'' are allowed.
string.notBlank=''{0}'' is required

#GROUP
group.code.notBlank=Code is required
group.name.notBlank=Name is required

group.exists =The group ''{0}'' already exists
group.code.mismatch=the group code specified the URI ''{0}'' does not match with the one provided in the payload ''{1}''
group.cannot.delete.reserved=The group ''{0}'' can not be deleted
group.cannot.delete.references=The group ''{0}'' can not be deleted due to references with ''{1}''

#Role
role.code.notBlank=Code is required
role.name.notBlank=Name is required
role.exists =The role ''{0}'' already exists
role.code.mismatch=the role code specified the URI ''{0}'' does not match with the one provided in the payload ''{1}''
role.cannot.delete.references=The role ''{0}'' can not be deleted due to references
role.permission.notFound=The permission ''{0}'' does not exists
#role.update.patch.invalid.generic=The provided patch for role ''{0}'' is not valid
#role.update.patch.invalid.code=The provided JSON patch can not contain operations on the code property

#permission
permission.code.notBlank=Code is required
permission.descr.notBlank=Descr is required


#page_settings
NotEmpty.pagesettings.params=List of params is required

#PAGE
page.notFound=no page with the code ''{0}'' and status ''{1}'' could be found.
page.code.notBlank=Code is required
page.code.wrongCharacters=Code accepted characters are [a-zA-Z0-9_]
page.pageModel.notBlank=pageModel is required
page.parent.notBlank=parentCode is required
page.group.notBlank=ownerGroup is required
page.exists=The page {0} already exists
page.code.mismatch=the page code specified in the URI ''{0}'' does not match with the one provided in the payload ''{1}''
page.update.parentcode.invalid=The page code ''{0}'' of existing page does not match with the parent code provided in the payload ''{1}''
page.update.group.invalid=The page group ''{0}'' of existing page does not match with the group provided in the payload ''{1}''
#page.update.patch.invalid.generic=The provided JSON patch for page ''{0}'' is not valid
#page.update.patch.invalid.code=The provided JSON patch can not contain operations on the code property
page.movement.parent.invalid.1=The page ''{0}'' can not be a parent of itself
page.movement.parent.invalid.2=The page ''{0}'' can not be the parent of ''{1}'' because he is one of his child
page.delete.online=Online pages can not be deleted
page.delete.children=Pages with children pages can not be deleted
page.move.position.invalid=Invalid Request for page position change
page.move.group.mismatch=Can not move a page under a page owned by a different group
page.move.freeUnderReserved.notAllowed=Cannot move a free page under a reserved page
page.move.status.mismatch=Can not move a published page under an unpublished page
page.status.draftOnly=The page ''{0}'' as available only in draft mode
page.status.invalid=Page status should be ''draft'' or ''published''
page.status.invalid.online.ref=online page has references
page.status.invalid.draft.ref=draft page has references
#page.status.invalid=the status of ''{0}'' page is draft
page.status.parent.unpublished=The page ''{0}'' can''t be published because the parent page ''{1}'' is not public
page.status.publicChild=The page ''{0}'' can''t be unpublished because it has public children
invalidParameter.framedId=the URI parameter ''{0}'' is not valid

#GuiFragments
guifragment.code.notBlank=Code is required
guifragment.gui.notBlank=Gui code is required

guifragment.exists=The fragment ''{0}'' already exists
guifragment.doesNotExist=The fragment ''{0}'' does not exist
guifragment.code.mismatch=the fragment code specified the URI ''{0}'' does not match with the one provided in the payload ''{1}''
guifragment.cannot.delete.references=The fragment ''{0}'' cannot be deleted because it is referenced by fragments {1} and page templates {2}
guifragment.cannot.delete.locked=The fragment ''{0}'' cannot be deleted because it is locked
guifragment.code.invalid=Code is mandatory, can only contain alphanumeric characters and underscores and its lenght cannot exceed 50


#pagemodel
pageModel.code.notBlank=code is required
pageModel.descr.notBlank=description is required
pageModel.configuration.notBlank=configuration is required
pageModel.configuration.frames.required=At least one frame is required
pageModelFrame.descr.notBlank=description is required
pageModel.code.exists=The page template ''{0}'' already exists
pageModel.frames.pos.mismatch=frame position should be zero based and progressive
pageModel.code.mismatch=the code specified the URI ''{0}'' does not match with the one provided in the payload ''{1}''
pageModel.cannot.delete.references=The page template ''{0}'' can not be deleted due to references
#pageModel.update.patch.invalid.generic=The provided patch for pageModel ''{0}'' is not valid
#pageModel.update.patch.invalid.code=The provided JSON patch can not contain operations on the code property

#Data Object Model
dataObjectModel.modelId.invalid=Model Id ''{0}'' is invalid because it has to be a long
dataObjectModel.doesNotExist=Model Id ''{0}'' does not exist
dataObjectModel.type.doesNotExist=no dataType with the code ''{0}'' could be found.
dataObjectModel.type.doesNotMachWithModel=dataType ''{0}'' does not match with the code ''{0}'' of extracted model.


dataObjectModel.modelId.notBlank=Model Id is required
dataObjectModel.descr.notBlank=Description is required
dataObjectModel.type.notBlank=Data Type is required
dataObjectModel.model.notBlank=Model is required

dataObjectModel.exists=The Data Object Model {0} already exists
dataObjectModel.modelId.mismatch=The Data Object Model code specified the URI ''{0}'' does not match with the one provided in the payload ''{1}''
dataObjectModel.cannot.delete.references=The Data Object Model {0} can not be deleted due to references

#Categories
category.code.notBlank=Category code is required
category.parent.notBlank=Parent Category code is required
category.titles.notBlank=Category Titles are required
category.code.mismatch=The Category code specified the URI ''{0}'' does not match with the one provided in the payload ''{1}''
category.notexists=The Category ''{0}'' does not exist
category.parent.notexists=The parent Category ''{0}'' does not exist
category.parent.cannotBeChanged=The parent Category cannot be changed
category.exists=The Category ''{0}'' already exists
category.cannot.delete.references=The Category ''{0}'' cannot be deleted because it is referenced
category.cannot.delete.children=The Category ''{0}'' cannot be deleted because it has children

#Widget Type
widgettype.code.notBlank=Widget code is required
widgettype.titles.notBlank=Widget Titles are required
widgettype.title.notBlank=Widget Title for lang ''{0}'' is required
widgettype.group.notBlank=Widget Group is required
widgettype.customUi.notBlank=Widget UI is required
widgettype.exists=The Widget {0} already exists
widgettype.group.invalid=The Group ''{0}'' does not exist
widgettype.code.mismatch=the Widget code specified the URI ''{0}'' does not match with the one provided in the payload ''{1}''
widgettype.delete.locked=The Widget ''{0}'' cannot be deleted because it is locked
widgettype.delete.references.page=The Widget {0} cannot be deleted because it is used into pages

#Widget
widgetConfigurationRequest.code.notBlank=code is required

#Widget validators
content_viewer_list.defaultLangTitle.required=The title for the default language ''{0}'' is required.
content_viewer_list.pageLink.required=The selected page ''{0}'' in the link is not valid
content_viewer_list.defaultLangLink.required=Provide a link description for the default ''{0}'' language
content_viewer_list.parameters.invalid=Specify at least one parameter among categories, pagination, and maximum number of result

content_viewer_list.contentType.required=The content type is required
content_viewer_list.contentType.invalid=No content type found with code ''{0}''
content_viewer_list.contentmodel.invalid=Invalid content template ''{0}'' for type code ''{1}''

content_viewer.contentId.required=contentId is required
content_viewer.contentId.not_found=No content found with id ''{0}''
content_viewer.contentId.group.invalid=the page groups ''{0}'' have to be compatible with the content groups ''{1}''
content_viewer.contentmodel.invalid=Invalid content template ''{0}'' for type code ''{1}''

# Entity Type
entityType.code.notBlank=Type Code is required
entityType.code.invalidCharacters=Type Code is invalid. It must be an alphanumeric string of 3 uppercase characters.
entityType.name.notBlank=Type Name is required

entityTypes.list.notBlank=Type List is required

entityType.exists=The Type {0} already exists
entityType.notExists=The Type {0} doesn't exists
entityType.code.mismatch=The Type code specified the URI ''{0}'' does not match with the one provided in the payload ''{1}''
entityType.cannot.delete.references=The Type {0} can not be deleted due to references

entityType.typeCode.invalid=The Type code ''{0}'' is invalid because it must be a string of 3 uppercase letters.
entityType.typeDescription.invalid=The Type description is invalid

entityType.attribute.type.invalid=Type {0} - The attribute type ''{1}'' does not exist
entityType.attribute.text.invalidRange=Type {0} - The validation of attribute ''{1}'' has an invalid test range
entityType.attribute.date.invalidRangeStart=Type {0} - The validation of attribute ''{1}'' has an invalid start date of the range
entityType.attribute.date.invalidRangeEnd=Type {0} - The validation of attribute ''{1}'' has an invalid end date of the range
entityType.attribute.date.invalidValue=Type {0} - The validation of attribute ''{1}'' has an invalid date value
entityType.attribute.date.invalidRange=Type {0} - The validation of date attribute ''{1}'' has an invalid range
entityType.attribute.number.invalidRange=Type {0} - The validation of number attribute ''{1}'' has an invalid range
entityType.attribute.ognl.missingErrorMessage=Type {0} - The Ognl validation of attribute ''{1}'' is misconfigured - missing error message
entityType.attribute.ognl.missingHelpMessage=Type {0} - The Ognl validation of attribute ''{1}'' is misconfigured - missing help message
entityType.attribute.enumerator.invalid=Type {0} - The enumerator attribute ''{1}'' is misconfigured
entityType.attribute.list.missingNestedAttribute=Type {0} - The List attribute ''{1}'' is misconfigured - missing nested attribute
entityType.attribute.composite.missingElements=Type {0} - The Composite attribute ''{1}'' is misconfigured - missing attribute elements

entityType.attribute.exists=Type {0} - The attribute ''{1}'' already exists
entityType.attribute.notExists=Type {0} - The attribute ''{1}'' does not exist
entityType.attribute.typeMismatch=Type {0} - Attribute {1} - The type ''{2}'' of current attribute does not match with the type in the payload ''{3}''
entityType.attribute.movement.invalid=Type {0} - The attribute ''{1}'' - Invalid required movement ''{2}''

# Data Type
dataType.pageCode.invalid=Data Type {0} - The view page ''{1}'' does not exist or it is not online
dataType.modelId.invalid=Data Type {0} - The model id ''{1}'' is invalid
dataType.modelId.doesNotExist=Data Type {0} - The model id ''{1}'' does not exist
dataType.modelId.mismatch=Data Type {0} - The model id ''{1}'' associated with the data type ''{2}''

#lang
language.active.required=The status ''active'' is required
language.cannot.disable.default=default language cannot be disabled

# USER
user.exists=The user ''{0}'' already exists
user.authorities.group.role.NotBlank=One of Group code or Role code is required
user.authorities.invalid.req=the specified {0} does not exist
user.authorities.self.update=Cannot update yourself
user.username.NotBlank=Username is required
user.username.format.invalid=The username ''{0}'' is invalid. You can insert at least 4 - max 80 characters uppercase and lowercase letters, including numbers, ''.'' and  ''_'' special characters.
user.password.format.invalid=The password is invalid. You can insert at least 8 - max 20 characters uppercase and lowercase letters, including numbers, ''.'' and  ''_'' special characters.
user.password.NotBlank=Password is required
user.password.invalid=Password is not valid
user.password.old.invalid=Incorrect old password
user.old.password.NotBlank=Old password is required
user.new.password.NotBlank=New password is required
user.username.mismatch=the username specified in the URI ''{0}'' does not match with the one provided in the payload ''{1}''
user.passwords.same=New password has to be different from old password
user.status.invalid=User status should be ''active'' or ''inactive''
user.admin.cant.delete="Sorry. You can't delete the administrator user"

#labels
labelRequest.key.required=Key is required
labelRequest.key.invalidSize=Key is longer than 50 characters.
labelRequest.key.invalidCharacters=Key contains invalid characters. Only alphanumeric characters and the underscore ''_'' are allowed.
labelRequest.key.mismatch=Key specified the URI ''{0}'' does not match with the one provided in the payload ''{1}''
labelRequest.titles.required=No languages specified
labelGroup.langs.defaultLang.textRequired=The value for the default language ''{0}'' is required
labelGroup.langs.lang.invalid=The language ''{0}'' is not valid
labelGroup.langs.lang.notActive=The language ''{0}'' is not active
labelGroup.langs.defaultLang.required=The default lang is required
labelGroup.code.already.present=The label ''{0}'' already exists

#userSettings
userSettings.ExtendedPrivacyModuleEnabled.required=''restrictionsActive'' is required
userSettings.GravatarIntegrationEnabled.required=''enableGravatorIntegration'' is required
userSettings.maxMonthsSinceLastPasswordChange.required=''maxMonthsPasswordValid'' is required
userSettings.MaxMonthsSinceLastAccess.required=''lastAccessPasswordExpirationMonths'' is required

userSettings.MaxMonthsSinceLastPasswordChange.invalid=''maxMonthsPasswordValid'' must be ''0'' or greater
userSettings.MaxMonthsSinceLastAccess.invalid=''lastAccessPasswordExpirationMonths'' must be ''0'' or greater

#Database

database.dump.table.notFound=No table dump found for backup ''{0}'', database ''{1}'', table ''{2}''

#Content
plugins.jacms.content.model.invalidLangCode=Invalid content template language code
plugins.jacms.content.model.nullDefaultModel=Default content template is null
plugins.jacms.content.model.nullListModel=Content list template is null
plugins.jacms.content.model.nullModel=Content template is null
plugins.jacms.content.model.invalid=Invalid content type
plugins.jacms.content.group.unauthorized=No permission to add content to this group
plugins.jacms.content.status.published=Content already published
plugins.jacms.content.status.invalid.online.ref=Content ''{0}'' cannot be unpublished because it is referenced
plugins.jacms.content.unauthorized.access=Unauthorized access
plugins.jacms.content.contentManager.error.read=Error reading content

#Content Settings
plugins.jacms.contentsettings.error.reloadReference=Error starting reload references
plugins.jacms.contentsettings.error.cropRatio.save=Error saving crop ratios
plugins.jacms.contentsettings.error.cropRatio.conflict=Crop ratio conflict
plugins.jacms.contentsettings.error.cropRatio.invalid=Crop ratio invalid format
plugins.jacms.contentsettings.error.cropRatio.notFound=Crop ratio not found
plugins.jacms.contentsettings.error.metadata.save=Error saving metadata
plugins.jacms.contentsettings.error.metadata.invalid=Invalid metadata key or mapping
plugins.jacms.contentsettings.error.metadata.conflict=Metadata conflict
plugins.jacms.contentsettings.error.metadata.notFound=Metadata not found
plugins.jacms.contentsettings.error.invalidEditor=Invalid editor
plugins.jacms.contentsettings.error.systemParams.read=Error loading system params

#Digital Assets
plugins.jacms.resources.resourceManager.error.list=Error listing resources
plugins.jacms.resources.resourceManager.error.get=Error loading resource
plugins.jacms.resources.resourceManager.error.delete=Error deleting resources
plugins.jacms.resources.resourceManager.error.persistence=Error saving resource
plugins.jacms.resources.image.errorReadingStream=Error reading file stream
plugins.jacms.category.error.notFound=Category not found
plugins.jacms.group.error.notFound=Invalid group or not authorized
plugins.jacms.resources.invalidMimeType=File type not allowed
plugins.jacms.resources.invalidResourceType=Invalid resource type


#ContentModel
contentmodel.id.already.present=The content template ''{0}'' already exists
contentmodel.id.wrongUtilizer=The template id ''{0}'' is being used as the default for the ''{1}'' content type
contentmodel.page.references=The content template is referenced
contentmodel.code.mismatch=the key specified the URI ''{0}'' does not match with the one provided in the payload ''{1}''
contentmodel.contentType.locked=Can not change the contentType. Expected ''{0}'' but was ''{1}''
contentmodel.contentType.notFound=The contentType ''{0}'' does not exists

#File Browser

fileBrowser.browser.protectedFolder.required=''protectedFolder'' is required when path is setted

fileBrowser.path.notBlank=''path'' is required
fileBrowser.protectedFolder.notBlank=''protectedFolder'' is required
fileBrowser.filename.notBlank=''filename'' is required
fileBrowser.base64.notBlank=''base64'' is required

fileBrowser.filename.invalidPath=The file path ''{0}'' is invalid
fileBrowser.filename.body.mismatch=The filename specified ''{0}'' does not match with the last section in the path ''{1}''
fileBrowser.filename.invalidFilename=The filename ''{0}'' is invalid
fileBrowser.file.exists=The file ''{0}'' already exists - protected folder ''{1}''
fileBrowser.directory.exists=The directory ''{0}'' already exists - protected folder ''{1}''

#activityStream
activityStreamCommentRequest.recordId.required=The recordId is required
activityStreamCommentRequest.comment.required=The comment is required

#entity
entity.exists=The entity ''{0}'' already exists
entity.id.mismatch=The entity id specified ''{0}''  does not match with the one provided in the payload ''{1}''
entity.notExists=The entity ''{0}'' does not exist
entity.id.notBlank=Code is required
entity.typeCode.notBlank=TypeCode is required

#API Consumer
api.consumer.grantType.invalid=''{0}'' is not a valid grant type
api.consumer.exists=A consumer having key ''{0}'' already exists
api.consumer.key.mismatch=The key specified the URI ''{0}'' does not match with the one provided in the payload ''{1}''
api.consumer.date.invalid=The date ''{0}'' has an invalid format. Required format is 'yyyy-MM-dd HH:mm:ss'

#Component Repository
digitalExchange.notFound=Component Repository ''{0}'' not found
digitalExchange.id.mismatch=The id specified in the URI ''{0}'' does not match with the one provided in the payload ''{1}''
digitalExchange.url.required=The URL is required
digitalExchange.name.required=The name is required
digitalExchange.id.invalid=Invalid Component Repository id: it can contain only alphanumeric characters.
digitalExchange.url.invalid=Invalid URL
digitalExchange.name.taken=There is already a Component Repository named ''{0}''. Please choose another name or rename it before.
digitalExchange.id.autogenerated=It is not possible to specify the Component Repository id while creating it: this field is automatically generated
digitalExchange.installation.alreadyRunning=Another installation job for this component is currently running
digitalExchange.rating.notSupported=The Component Repository providing this component does not support rating